import tkinter as tk
from tkinter import messagebox, scrolledtext
import socket
import threading
import subprocess


def scan_ports():
    target = entry_host.get().strip()
    start_port = int(entry_start_port.get().strip())
    end_port = int(entry_end_port.get().strip())

    if not target:
        messagebox.showerror("Error", "Please enter a valid target.")
        return

    results_text.delete(1.0, tk.END)
    results_text.insert(tk.END, f"Scanning {target} from port {start_port} to {end_port}\n")

    def scan():
        for port in range(start_port, end_port + 1):
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.settimeout(0.3)
            result = s.connect_ex((target, port))
            if result == 0:
                results_text.insert(tk.END, f"[+] Port {port} is open\n")
            s.close()
        results_text.insert(tk.END, "\nScan Complete!\n")

    threading.Thread(target=scan, daemon=True).start()


def scan_network():
    network = entry_network.get().strip()
    if not network:
        messagebox.showerror("Error", "Please enter a valid network (e.g., 192.168.1.0/24).")
        return

    results_text.delete(1.0, tk.END)
    results_text.insert(tk.END, f"Scanning network {network} for connected devices...\n")

    def network_scan():
        try:
            command = f"nmap -sn {network}"
            output = subprocess.getoutput(command)
            results_text.insert(tk.END, output + "\nScan Complete!\n")
        except Exception as e:
            results_text.insert(tk.END, f"Error scanning network: {e}\n")

    threading.Thread(target=network_scan, daemon=True).start()


# GUI setup
root = tk.Tk()
root.title("Advanced Network & Port Scanner")
root.geometry("500x500")
root.resizable(False, False)

tk.Label(root, text="Enter Target Host/IP:").pack(pady=5)
entry_host = tk.Entry(root, width=40)
entry_host.pack(pady=5)

tk.Label(root, text="Start Port:").pack(pady=5)
entry_start_port = tk.Entry(root, width=10)
entry_start_port.insert(0, "1")
entry_start_port.pack(pady=5)

tk.Label(root, text="End Port:").pack(pady=5)
entry_end_port = tk.Entry(root, width=10)
entry_end_port.insert(0, "1024")
entry_end_port.pack(pady=5)

scan_button = tk.Button(root, text="Start Port Scan", command=scan_ports)
scan_button.pack(pady=10)

tk.Label(root, text="Enter Network (e.g., 192.168.1.0/24):").pack(pady=5)
entry_network = tk.Entry(root, width=40)
entry_network.pack(pady=5)

network_scan_button = tk.Button(root, text="Scan Network", command=scan_network)
network_scan_button.pack(pady=10)

results_text = scrolledtext.ScrolledText(root, height=15, width=60)
results_text.pack(pady=5)

root.mainloop()
